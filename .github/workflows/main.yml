# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: main

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.102.3
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_Linux-64bit.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: public

  deploy-preview:
    concurrency:
      group: "${{ github.ref_name }}-preview"
      cancel-in-progress: true
    environment:
      name: ${{ github.ref_name }}-preview
      url: https://${{ github.ref_name }}-preview.garden-cbf.pages.dev
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Downloads artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: public

      - name: Publish app
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          command: pages publish --env preview --branch ${{ github.ref_name }}-preview --project-name blog ./public

  deploy-live:
    concurrency:
      group: "leolleo.dev"
      cancel-in-progress: true
    environment:
      name: leolleo.dev
      url: https://leolleo.dev
    runs-on: ubuntu-latest
    needs: deploy-preview
    steps:
      - name: Downloads artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: public

      - name: Publish app
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          command: pages publish --env production --project-name blog ./public

      - name: Purge cloudflare cache
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/a5f4d54fc54af37e05218d9b4e8cd4d9/purge_cache" \
          -H "Authorization: Bearer ${{ secrets.CF_API_TOKEN }}" \
          -H "Content-Type: application/json" \
          --data '{"purge_everything":true}'
